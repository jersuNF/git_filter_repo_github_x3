menuconfig STORAGE_CONTROLLER
        bool "Enable storage controller module"
	select POLL
        default y

if STORAGE_CONTROLLER


	module = STORAGE_CONTROLLER
	module-str = STG module
	source "subsys/logging/Kconfig.template.log_config"

	config STORAGE_THREAD_SIZE
		int "Size of thread stack size"
		default 8192

	config STORAGE_THREAD_PRIORITY
		int "Priority of the storage work function threads"
		default -1
		help
		  A cooperative thread has a negative priority value. 
		  Once it becomes the current thread, a cooperative thread 
		  remains the current thread until it performs an action 
		  that makes it unready.
		  A preemptible thread has a non-negative priority value. 
		  Once it becomes the current thread, a preemptible thread 
		  may be supplanted at any time if a cooperative thread, 
		  or a preemptible thread of higher or equal priority, 
		  becomes ready.

	config STORAGE_SECTOR_SIZE
		hex "Size of the sectors that FCB uses for log/ano/pasture data"
		default 0x1000

	config MSGQ_WRITE_EVENT_SIZE
		int "Size of write event message queue."
		default 4

	config MSGQ_READ_EVENT_SIZE
		int "Size of read event message queue."
		default 4

	config WALK_CONSUME_TIMEOUT_SEC
		int "Seconds to wait before giving up during walk process."
		default 5
		help
		  This configuration sets how long the storage controller
		  waits before timing out durin the walk process. The walk
		  process simply iterates all the new entires since
		  the f_oldest entry and sends out read acks in the callback.
		  It waits for the requester to consume the data before
		  continuing, where this configuration decides how long to wait
		  before giving up and returning an error, NOT rotating the FCB.

endif